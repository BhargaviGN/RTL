$date
	Sun Jun 11 17:48:35 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module parallel_adder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module pa $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 4 ( s [3:0] $end
$var wire 1 " cout $end
$var wire 1 ) c3 $end
$var wire 1 * c2 $end
$var wire 1 + c1 $end
$scope module f1 $end
$var wire 1 , a $end
$var wire 1 - b $end
$var wire 1 % cin $end
$var wire 1 + cout $end
$var wire 1 . s $end
$upscope $end
$scope module f2 $end
$var wire 1 / a $end
$var wire 1 0 b $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 1 s $end
$upscope $end
$scope module f3 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 * cin $end
$var wire 1 ) cout $end
$var wire 1 4 s $end
$upscope $end
$scope module f4 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 ) cin $end
$var wire 1 " cout $end
$var wire 1 7 s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
07
06
05
04
03
02
11
10
0/
1.
0-
1,
0+
0*
0)
b11 (
b10 '
b1 &
0%
b10 $
b1 #
0"
b11 !
$end
#2
14
b1111 !
b1111 (
17
00
13
16
1/
b1100 $
b1100 '
b11 #
b11 &
#4
1"
07
1)
04
1*
01
1+
b0 !
b0 (
0.
1%
#6
0"
1.
17
b1101 !
b1101 (
14
1-
06
12
b101 $
b101 '
b111 #
b111 &
#8
