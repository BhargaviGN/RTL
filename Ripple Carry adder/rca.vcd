$date
	Mon Jun 12 12:58:45 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module ripple_carry_adder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " c_out $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module rp $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 % cin $end
$var wire 1 ( x0 $end
$var wire 1 ) x1 $end
$var wire 1 * x2 $end
$var wire 1 + x3 $end
$var wire 4 , s [3:0] $end
$var wire 1 " c_out $end
$var wire 1 - c3 $end
$var wire 1 . c2 $end
$var wire 1 / c1 $end
$scope module f1 $end
$var wire 1 0 a $end
$var wire 1 ( b $end
$var wire 1 % cin $end
$var wire 1 / cout $end
$var wire 1 1 sum $end
$upscope $end
$scope module f2 $end
$var wire 1 2 a $end
$var wire 1 ) b $end
$var wire 1 / cin $end
$var wire 1 . cout $end
$var wire 1 3 sum $end
$upscope $end
$scope module f3 $end
$var wire 1 4 a $end
$var wire 1 * b $end
$var wire 1 . cin $end
$var wire 1 - cout $end
$var wire 1 5 sum $end
$upscope $end
$scope module f4 $end
$var wire 1 6 a $end
$var wire 1 + b $end
$var wire 1 - cin $end
$var wire 1 " cout $end
$var wire 1 7 sum $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
bx ,
x+
x*
x)
x(
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#2
0"
17
0-
15
0.
13
0/
b1111 !
b1111 ,
11
0(
0)
1*
1+
10
12
04
06
0%
b1100 $
b1100 '
b11 #
b11 &
#4
11
b1111 !
b1111 ,
13
1(
1)
00
02
b1111 $
b1111 '
b0 #
b0 &
#6
1"
03
07
0/
1-
11
b1 !
b1 ,
05
0(
0)
10
14
b1100 $
b1100 '
b101 #
b101 &
#8
0"
15
17
1.
0-
1)
0*
0+
b1101 !
b1101 ,
11
00
12
04
16
1%
b1101 $
b1101 '
b1010 #
b1010 &
#10
01
1/
15
1-
b1100 !
b1100 ,
17
0)
1*
10
14
06
b1011 $
b1011 '
b111 #
b111 &
#12
0-
11
0/
13
0.
15
b1111 !
b1111 ,
17
0"
1)
00
02
04
16
b1001 $
b1001 '
b1000 #
b1000 &
