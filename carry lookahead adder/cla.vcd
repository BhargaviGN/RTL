$date
	Mon Jun 12 13:15:39 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module carry_lookahead_adder_tb $end
$var wire 4 ! s [3:0] $end
$var wire 1 " cout $end
$var reg 4 # a [3:0] $end
$var reg 4 $ b [3:0] $end
$var reg 1 % cin $end
$scope module ca $end
$var wire 4 & a [3:0] $end
$var wire 4 ' b [3:0] $end
$var wire 1 ( c1 $end
$var wire 1 ) c2 $end
$var wire 1 * c3 $end
$var wire 1 % cin $end
$var wire 4 + s [3:0] $end
$var wire 3 , p [2:0] $end
$var wire 3 - g [2:0] $end
$var wire 1 " cout $end
$scope module f1 $end
$var wire 1 . a $end
$var wire 1 / b $end
$var wire 1 % cin $end
$var wire 1 ( cout $end
$var wire 1 0 s $end
$upscope $end
$scope module f2 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 ( cin $end
$var wire 1 ) cout $end
$var wire 1 3 s $end
$upscope $end
$scope module f3 $end
$var wire 1 4 a $end
$var wire 1 5 b $end
$var wire 1 ) cin $end
$var wire 1 * cout $end
$var wire 1 6 s $end
$upscope $end
$scope module f4 $end
$var wire 1 7 a $end
$var wire 1 8 b $end
$var wire 1 * cin $end
$var wire 1 " cout $end
$var wire 1 9 s $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
bx -
bx ,
bx +
x*
x)
x(
bx '
bx &
x%
bx $
bx #
x"
bx !
$end
#2
0"
19
0*
16
0)
13
0(
b1111 !
b1111 +
10
b111 ,
b0 -
0/
02
15
18
1.
11
04
07
0%
b1100 $
b1100 '
b11 #
b11 &
#4
1/
12
0.
01
b1111 $
b1111 '
b0 #
b0 &
#6
1"
09
1*
03
b1 !
b1 +
06
b1 ,
b100 -
0/
02
1.
14
b1100 $
b1100 '
b101 #
b101 &
#8
1)
1*
03
06
19
1(
b111 ,
b0 -
b1000 !
b1000 +
00
1/
0.
11
04
17
1%
b1101 $
b1101 '
b1010 #
b1010 &
#10
13
10
b11 !
b11 +
09
b100 ,
b11 -
12
05
1.
14
07
b1011 $
b1011 '
b111 #
b111 &
#12
13
1(
0)
00
06
0*
b10 !
b10 +
09
b1 ,
b0 -
02
0.
01
04
17
b1001 $
b1001 '
b1000 #
b1000 &
